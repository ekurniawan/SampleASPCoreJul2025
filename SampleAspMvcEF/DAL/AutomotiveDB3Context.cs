// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using SampleAspMvcEF.Models;

namespace SampleAspMvcEF.DAL;

public partial class AutomotiveDB3Context : DbContext
{
    public AutomotiveDB3Context(DbContextOptions<AutomotiveDB3Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Agreement> Agreements { get; set; }

    public virtual DbSet<Car> Cars { get; set; }

    public virtual DbSet<ConsultHistory> ConsultHistories { get; set; }

    public virtual DbSet<Credit> Credits { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Dealer> Dealers { get; set; }

    public virtual DbSet<DealerCar> DealerCars { get; set; }

    public virtual DbSet<LetterOfIntent> LetterOfIntents { get; set; }

    public virtual DbSet<PaymentHistory> PaymentHistories { get; set; }

    public virtual DbSet<SalesPerson> SalesPeople { get; set; }

    public virtual DbSet<TestDrive> TestDrives { get; set; }

    public virtual DbSet<WarrantyClaim> WarrantyClaims { get; set; }

    public virtual DbSet<WarrantyRegistration> WarrantyRegistrations { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Agreement>(entity =>
        {
            entity.HasKey(e => e.AgreementId).HasName("PK__Agreemen__0A309D232910C534");

            entity.ToTable("Agreement");

            entity.HasIndex(e => e.LoiId, "UQ__Agreemen__412C029BC5C303B4").IsUnique();

            entity.Property(e => e.AgreementId).HasColumnName("AgreementID");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.Date).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.LoiId).HasColumnName("LoiID");
            entity.Property(e => e.SalesPersonId).HasColumnName("SalesPersonID");

            entity.HasOne(d => d.Customer).WithMany(p => p.Agreements)
                .HasForeignKey(d => d.CustomerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Agreement__Custo__5CD6CB2B");

            entity.HasOne(d => d.Loi).WithOne(p => p.Agreement)
                .HasForeignKey<Agreement>(d => d.LoiId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Agreement__LoiID__5441852A");

            entity.HasOne(d => d.SalesPerson).WithMany(p => p.Agreements)
                .HasForeignKey(d => d.SalesPersonId)
                .HasConstraintName("FK__Agreement__Sales__5EBF139D");
        });

        modelBuilder.Entity<Car>(entity =>
        {
            entity.HasKey(e => e.CarId).HasName("PK__Car__68A0340E77F06A5D");

            entity.ToTable("Car");

            entity.HasIndex(e => e.VId, "UQ__Car__A2B0D9F1C3E4F5B6").IsUnique();
            entity.Property(e => e.CarId).HasColumnName("CarID");
            entity.Property(e => e.Color)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Model)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Stock).HasDefaultValue(0);
            entity.Property(e => e.Type)
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<ConsultHistory>(entity =>
        {
            entity.HasKey(e => e.ConsultId).HasName("PK__ConsultH__28859B15882A2E42");

            entity.ToTable("ConsultHistory");

            entity.Property(e => e.ConsultId).HasColumnName("ConsultID");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.Date).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.Note).HasColumnType("text");
            entity.Property(e => e.SalesPersonId).HasColumnName("SalesPersonID");

            entity.HasOne(d => d.Customer).WithMany(p => p.ConsultHistories)
                .HasForeignKey(d => d.CustomerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ConsultHi__Custo__5FB337D6");

            entity.HasOne(d => d.SalesPerson).WithMany(p => p.ConsultHistories)
                .HasForeignKey(d => d.SalesPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ConsultHi__Sales__60A75C0F");
        });

        modelBuilder.Entity<Credit>(entity =>
        {
            entity.HasKey(e => e.CreditId).HasName("PK__Credit__ED5ED09B313A4DA0");

            entity.ToTable("Credit");

            entity.HasIndex(e => e.AgreementId, "UQ__Credit__0A309D22EE83FE0C").IsUnique();

            entity.Property(e => e.CreditId).HasColumnName("CreditID");
            entity.Property(e => e.AgreementId).HasColumnName("AgreementID");
            entity.Property(e => e.CreditStatus)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.Agreement).WithOne(p => p.Credit)
                .HasForeignKey<Credit>(d => d.AgreementId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Credit__Agreemen__619B8048");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__Customer__A4AE64B8E6A3B661");

            entity.ToTable("Customer");

            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.Address).HasColumnType("text");
            entity.Property(e => e.CardId)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CardID");
            entity.Property(e => e.Email)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(15)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Dealer>(entity =>
        {
            entity.HasKey(e => e.DealerId).HasName("PK__Dealer__CA2F8E92D9559A98");

            entity.ToTable("Dealer");

            entity.Property(e => e.DealerId).HasColumnName("DealerID");
            entity.Property(e => e.Address).HasColumnType("text");
            entity.Property(e => e.Email)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(15)
                .IsUnicode(false);
        });

        modelBuilder.Entity<DealerCar>(entity =>
        {
            entity.HasKey(e => e.DealerCarId).HasName("PK__DealerCa__7DD0B566538D77B1");

            entity.ToTable("DealerCar");

            entity.Property(e => e.DealerCarId).HasColumnName("DealerCarID");
            entity.Property(e => e.CarId).HasColumnName("CarID");
            entity.Property(e => e.DealerId).HasColumnName("DealerID");

            entity.HasOne(d => d.Car).WithMany(p => p.DealerCars)
                .HasForeignKey(d => d.CarId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DealerCar__CarID__628FA481");

            entity.HasOne(d => d.Dealer).WithMany(p => p.DealerCars)
                .HasForeignKey(d => d.DealerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DealerCar__Deale__6383C8BA");
        });

        modelBuilder.Entity<LetterOfIntent>(entity =>
        {
            entity.HasKey(e => e.LoiId).HasName("PK__LetterOf__412C029A7A1372A8");

            entity.ToTable("LetterOfIntent");

            entity.Property(e => e.LoiId).HasColumnName("LoiID");
            entity.Property(e => e.DealerCarId).HasColumnName("DealerCarID");
            entity.Property(e => e.PaymentMethod)
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.HasOne(d => d.DealerCar).WithMany(p => p.LetterOfIntents)
                .HasForeignKey(d => d.DealerCarId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LetterOfI__Deale__4F7CD00D");
        });

        modelBuilder.Entity<PaymentHistory>(entity =>
        {
            entity.HasKey(e => e.PaymentId).HasName("PK__PaymentH__9B556A58E7EC8DDF");

            entity.ToTable("PaymentHistory");

            entity.Property(e => e.PaymentId).HasColumnName("PaymentID");
            entity.Property(e => e.AgreementId).HasColumnName("AgreementID");
            entity.Property(e => e.Date).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Agreement).WithMany(p => p.PaymentHistories)
                .HasForeignKey(d => d.AgreementId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PaymentHi__Agree__656C112C");
        });

        modelBuilder.Entity<SalesPerson>(entity =>
        {
            entity.HasKey(e => e.SalesId).HasName("PK__SalesPer__C952FB1235E0F6CE");

            entity.ToTable("SalesPerson");

            entity.Property(e => e.SalesId).HasColumnName("SalesID");
            entity.Property(e => e.DealerId).HasColumnName("DealerID");
            entity.Property(e => e.Email)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(15)
                .IsUnicode(false);

            entity.HasOne(d => d.Dealer).WithMany(p => p.SalesPeople)
                .HasForeignKey(d => d.DealerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__SalesPers__Deale__66603565");
        });

        modelBuilder.Entity<TestDrive>(entity =>
        {
            entity.HasKey(e => e.TestDriveId).HasName("PK__TestDriv__BF98EF728A76C646");

            entity.ToTable("TestDrive");

            entity.Property(e => e.TestDriveId).HasColumnName("TestDriveID");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.Date).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.DealerCarId).HasColumnName("DealerCarID");
            entity.Property(e => e.Feedback)
                .HasColumnType("text")
                .HasColumnName("feedback");
            entity.Property(e => e.SalesPersonId).HasColumnName("SalesPersonID");

            entity.HasOne(d => d.Customer).WithMany(p => p.TestDrives)
                .HasForeignKey(d => d.CustomerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__TestDrive__Custo__68487DD7");

            entity.HasOne(d => d.DealerCar).WithMany(p => p.TestDrives)
                .HasForeignKey(d => d.DealerCarId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__TestDrive__Deale__6754599E");

            entity.HasOne(d => d.SalesPerson).WithMany(p => p.TestDrives)
                .HasForeignKey(d => d.SalesPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__TestDrive__Sales__693CA210");
        });

        modelBuilder.Entity<WarrantyClaim>(entity =>
        {
            entity.HasKey(e => e.ClaimId).HasName("PK__Warranty__EF2E13BB5AEAA3B4");

            entity.ToTable("WarrantyClaim");

            entity.Property(e => e.ClaimId).HasColumnName("ClaimID");
            entity.Property(e => e.ClaimStatus)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.IssueReported)
                .IsRequired()
                .HasColumnType("text");
            entity.Property(e => e.ServiceCenter)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.WarrantyId).HasColumnName("WarrantyID");

            entity.HasOne(d => d.Warranty).WithMany(p => p.WarrantyClaims)
                .HasForeignKey(d => d.WarrantyId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__WarrantyC__Warra__6A30C649");
        });

        modelBuilder.Entity<WarrantyRegistration>(entity =>
        {
            entity.HasKey(e => e.WarrantyId).HasName("PK__Warranty__2ED318F3EDE5B9B7");

            entity.ToTable("WarrantyRegistration");

            entity.HasIndex(e => e.PurchaseId, "UQ__Warranty__6B0A6BDFD401A47A").IsUnique();

            entity.Property(e => e.WarrantyId).HasColumnName("WarrantyID");
            entity.Property(e => e.CarId).HasColumnName("CarID");
            entity.Property(e => e.PurchaseId).HasColumnName("PurchaseID");

            entity.HasOne(d => d.Car).WithMany(p => p.WarrantyRegistrations)
                .HasForeignKey(d => d.CarId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__WarrantyR__CarID__6B24EA82");

            entity.HasOne(d => d.Purchase).WithOne(p => p.WarrantyRegistration)
                .HasForeignKey<WarrantyRegistration>(d => d.PurchaseId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__WarrantyR__Purch__6C190EBB");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}